buildscript {
    def localRepositoryPath = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
    repositories {
        mavenLocal()
        maven { url localRepositoryPath }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE')
    }
}

apply plugin: 'org.springframework.boot'

bootJar {
    baseName = 'credit-server'
    mainClassName = 'com.csci.cloud.core.server.Bootstrap'
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('commons-codec:commons-codec')
    compile('io.springfox:springfox-swagger2')
    compile('io.springfox:springfox-swagger-ui')
    compile('io.swagger:swagger-annotations')
    compile('io.swagger:swagger-models')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('io.github.openfeign:feign-okhttp')
    compile('com.github.pagehelper:pagehelper')
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
    compile project(":lib-common")

    //es
    compile('io.searchbox:jest')
    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')

    //stream
    compile('org.springframework.cloud:spring-cloud-stream')
    compile('org.springframework.cloud:spring-cloud-stream-binder-rabbit')

    compile('net.logstash.logback:logstash-logback-encoder')

    //client
    compile('com.csci.cloud.auth:client')
    compile project(":cloud-mirror-client")
    compile project(":cloud-mercury-client")
}


