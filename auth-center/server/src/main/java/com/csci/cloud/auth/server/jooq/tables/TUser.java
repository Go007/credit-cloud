/*
 * This file is generated by jOOQ.
 */
package com.csci.cloud.auth.server.jooq.tables;


import com.csci.cloud.auth.server.jooq.CreditCloudConsole;
import com.csci.cloud.auth.server.jooq.Indexes;
import com.csci.cloud.auth.server.jooq.Keys;
import com.csci.cloud.auth.server.jooq.tables.records.TUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUser extends TableImpl<TUserRecord> {

    private static final long serialVersionUID = 1236642700;

    /**
     * The reference instance of <code>credit_cloud_console.t_user</code>
     */
    public static final TUser T_USER = new TUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserRecord> getRecordType() {
        return TUserRecord.class;
    }

    /**
     * The column <code>credit_cloud_console.t_user.id</code>. 用户id
     */
    public final TableField<TUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "用户id");

    /**
     * The column <code>credit_cloud_console.t_user.tenant_id</code>. 租户id
     */
    public final TableField<TUserRecord, Integer> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "租户id");

    /**
     * The column <code>credit_cloud_console.t_user.login_name</code>. 登录名
     */
    public final TableField<TUserRecord, String> LOGIN_NAME = createField("login_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "登录名");

    /**
     * The column <code>credit_cloud_console.t_user.password</code>. 密码
     */
    public final TableField<TUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "密码");

    /**
     * The column <code>credit_cloud_console.t_user.email</code>. 邮件
     */
    public final TableField<TUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(128), this, "邮件");

    /**
     * The column <code>credit_cloud_console.t_user.mobile</code>. 手机
     */
    public final TableField<TUserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(32), this, "手机");

    /**
     * The column <code>credit_cloud_console.t_user.email_verified</code>. 邮箱是否验证：0-未验证，1-已验证
     */
    public final TableField<TUserRecord, Integer> EMAIL_VERIFIED = createField("email_verified", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "邮箱是否验证：0-未验证，1-已验证");

    /**
     * The column <code>credit_cloud_console.t_user.mobile_verified</code>.
     */
    public final TableField<TUserRecord, Integer> MOBILE_VERIFIED = createField("mobile_verified", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>credit_cloud_console.t_user.status</code>. 用户状态：0-未激活，1-已激活，9-删除
     */
    public final TableField<TUserRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户状态：0-未激活，1-已激活，9-删除");

    /**
     * The column <code>credit_cloud_console.t_user.group_id</code>. 用户组id
     */
    public final TableField<TUserRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户组id");

    /**
     * The column <code>credit_cloud_console.t_user.created_at</code>. 创建时间
     */
    public final TableField<TUserRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>credit_cloud_console.t_user.updated_at</code>. 更新时间
     */
    public final TableField<TUserRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>credit_cloud_console.t_user</code> table reference
     */
    public TUser() {
        this(DSL.name("t_user"), null);
    }

    /**
     * Create an aliased <code>credit_cloud_console.t_user</code> table reference
     */
    public TUser(String alias) {
        this(DSL.name(alias), T_USER);
    }

    /**
     * Create an aliased <code>credit_cloud_console.t_user</code> table reference
     */
    public TUser(Name alias) {
        this(alias, T_USER);
    }

    private TUser(Name alias, Table<TUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUser(Name alias, Table<TUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TUser(Table<O> child, ForeignKey<O, TUserRecord> key) {
        super(child, key, T_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CreditCloudConsole.CREDIT_CLOUD_CONSOLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_USER_EMAIL_UNIQUE, Indexes.T_USER_LOGIN_NAME_UNIQUE, Indexes.T_USER_MOBILE_UNIQUE, Indexes.T_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserRecord> getPrimaryKey() {
        return Keys.KEY_T_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserRecord>>asList(Keys.KEY_T_USER_PRIMARY, Keys.KEY_T_USER_LOGIN_NAME_UNIQUE, Keys.KEY_T_USER_EMAIL_UNIQUE, Keys.KEY_T_USER_MOBILE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUser as(String alias) {
        return new TUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUser as(Name alias) {
        return new TUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUser rename(String name) {
        return new TUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TUser rename(Name name) {
        return new TUser(name, null);
    }
}
