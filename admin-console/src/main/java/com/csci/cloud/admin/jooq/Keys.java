/*
 * This file is generated by jOOQ.
 */
package com.csci.cloud.admin.jooq;


import com.csci.cloud.admin.jooq.tables.TApplication;
import com.csci.cloud.admin.jooq.tables.TApplicationKey;
import com.csci.cloud.admin.jooq.tables.TConfigServer;
import com.csci.cloud.admin.jooq.tables.TPermission;
import com.csci.cloud.admin.jooq.tables.TTenant;
import com.csci.cloud.admin.jooq.tables.TUser;
import com.csci.cloud.admin.jooq.tables.TUserCaptcha;
import com.csci.cloud.admin.jooq.tables.TUserGroup;
import com.csci.cloud.admin.jooq.tables.TUserRefreshToken;
import com.csci.cloud.admin.jooq.tables.records.TApplicationKeyRecord;
import com.csci.cloud.admin.jooq.tables.records.TApplicationRecord;
import com.csci.cloud.admin.jooq.tables.records.TConfigServerRecord;
import com.csci.cloud.admin.jooq.tables.records.TPermissionRecord;
import com.csci.cloud.admin.jooq.tables.records.TTenantRecord;
import com.csci.cloud.admin.jooq.tables.records.TUserCaptchaRecord;
import com.csci.cloud.admin.jooq.tables.records.TUserGroupRecord;
import com.csci.cloud.admin.jooq.tables.records.TUserRecord;
import com.csci.cloud.admin.jooq.tables.records.TUserRefreshTokenRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>credit_cloud_console</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TApplicationRecord, Integer> IDENTITY_T_APPLICATION = Identities0.IDENTITY_T_APPLICATION;
    public static final Identity<TConfigServerRecord, Integer> IDENTITY_T_CONFIG_SERVER = Identities0.IDENTITY_T_CONFIG_SERVER;
    public static final Identity<TTenantRecord, Integer> IDENTITY_T_TENANT = Identities0.IDENTITY_T_TENANT;
    public static final Identity<TUserRecord, Integer> IDENTITY_T_USER = Identities0.IDENTITY_T_USER;
    public static final Identity<TUserCaptchaRecord, Integer> IDENTITY_T_USER_CAPTCHA = Identities0.IDENTITY_T_USER_CAPTCHA;
    public static final Identity<TUserGroupRecord, Integer> IDENTITY_T_USER_GROUP = Identities0.IDENTITY_T_USER_GROUP;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TApplicationRecord> KEY_T_APPLICATION_PRIMARY = UniqueKeys0.KEY_T_APPLICATION_PRIMARY;
    public static final UniqueKey<TApplicationKeyRecord> KEY_T_APPLICATION_KEY_PRIMARY = UniqueKeys0.KEY_T_APPLICATION_KEY_PRIMARY;
    public static final UniqueKey<TApplicationKeyRecord> KEY_T_APPLICATION_KEY_APP_KEY_UNIQUE = UniqueKeys0.KEY_T_APPLICATION_KEY_APP_KEY_UNIQUE;
    public static final UniqueKey<TApplicationKeyRecord> KEY_T_APPLICATION_KEY_APP_SECRET_UNIQUE = UniqueKeys0.KEY_T_APPLICATION_KEY_APP_SECRET_UNIQUE;
    public static final UniqueKey<TConfigServerRecord> KEY_T_CONFIG_SERVER_PRIMARY = UniqueKeys0.KEY_T_CONFIG_SERVER_PRIMARY;
    public static final UniqueKey<TPermissionRecord> KEY_T_PERMISSION_PRIMARY = UniqueKeys0.KEY_T_PERMISSION_PRIMARY;
    public static final UniqueKey<TTenantRecord> KEY_T_TENANT_PRIMARY = UniqueKeys0.KEY_T_TENANT_PRIMARY;
    public static final UniqueKey<TTenantRecord> KEY_T_TENANT_NAME_UNIQUE = UniqueKeys0.KEY_T_TENANT_NAME_UNIQUE;
    public static final UniqueKey<TTenantRecord> KEY_T_TENANT_CODE_UNIQUE = UniqueKeys0.KEY_T_TENANT_CODE_UNIQUE;
    public static final UniqueKey<TUserRecord> KEY_T_USER_PRIMARY = UniqueKeys0.KEY_T_USER_PRIMARY;
    public static final UniqueKey<TUserRecord> KEY_T_USER_LOGIN_NAME_UNIQUE = UniqueKeys0.KEY_T_USER_LOGIN_NAME_UNIQUE;
    public static final UniqueKey<TUserRecord> KEY_T_USER_EMAIL_UNIQUE = UniqueKeys0.KEY_T_USER_EMAIL_UNIQUE;
    public static final UniqueKey<TUserRecord> KEY_T_USER_MOBILE_UNIQUE = UniqueKeys0.KEY_T_USER_MOBILE_UNIQUE;
    public static final UniqueKey<TUserCaptchaRecord> KEY_T_USER_CAPTCHA_PRIMARY = UniqueKeys0.KEY_T_USER_CAPTCHA_PRIMARY;
    public static final UniqueKey<TUserCaptchaRecord> KEY_T_USER_CAPTCHA_UNIQ_LOGIN_NAME = UniqueKeys0.KEY_T_USER_CAPTCHA_UNIQ_LOGIN_NAME;
    public static final UniqueKey<TUserGroupRecord> KEY_T_USER_GROUP_PRIMARY = UniqueKeys0.KEY_T_USER_GROUP_PRIMARY;
    public static final UniqueKey<TUserRefreshTokenRecord> KEY_T_USER_REFRESH_TOKEN_PRIMARY = UniqueKeys0.KEY_T_USER_REFRESH_TOKEN_PRIMARY;
    public static final UniqueKey<TUserRefreshTokenRecord> KEY_T_USER_REFRESH_TOKEN_USER_ID = UniqueKeys0.KEY_T_USER_REFRESH_TOKEN_USER_ID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TApplicationRecord, Integer> IDENTITY_T_APPLICATION = Internal.createIdentity(TApplication.T_APPLICATION, TApplication.T_APPLICATION.ID);
        public static Identity<TConfigServerRecord, Integer> IDENTITY_T_CONFIG_SERVER = Internal.createIdentity(TConfigServer.T_CONFIG_SERVER, TConfigServer.T_CONFIG_SERVER.ID);
        public static Identity<TTenantRecord, Integer> IDENTITY_T_TENANT = Internal.createIdentity(TTenant.T_TENANT, TTenant.T_TENANT.ID);
        public static Identity<TUserRecord, Integer> IDENTITY_T_USER = Internal.createIdentity(TUser.T_USER, TUser.T_USER.ID);
        public static Identity<TUserCaptchaRecord, Integer> IDENTITY_T_USER_CAPTCHA = Internal.createIdentity(TUserCaptcha.T_USER_CAPTCHA, TUserCaptcha.T_USER_CAPTCHA.ID);
        public static Identity<TUserGroupRecord, Integer> IDENTITY_T_USER_GROUP = Internal.createIdentity(TUserGroup.T_USER_GROUP, TUserGroup.T_USER_GROUP.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TApplicationRecord> KEY_T_APPLICATION_PRIMARY = Internal.createUniqueKey(TApplication.T_APPLICATION, "KEY_t_application_PRIMARY", TApplication.T_APPLICATION.ID);
        public static final UniqueKey<TApplicationKeyRecord> KEY_T_APPLICATION_KEY_PRIMARY = Internal.createUniqueKey(TApplicationKey.T_APPLICATION_KEY, "KEY_t_application_key_PRIMARY", TApplicationKey.T_APPLICATION_KEY.APP_KEY);
        public static final UniqueKey<TApplicationKeyRecord> KEY_T_APPLICATION_KEY_APP_KEY_UNIQUE = Internal.createUniqueKey(TApplicationKey.T_APPLICATION_KEY, "KEY_t_application_key_app_key_UNIQUE", TApplicationKey.T_APPLICATION_KEY.APP_KEY);
        public static final UniqueKey<TApplicationKeyRecord> KEY_T_APPLICATION_KEY_APP_SECRET_UNIQUE = Internal.createUniqueKey(TApplicationKey.T_APPLICATION_KEY, "KEY_t_application_key_app_secret_UNIQUE", TApplicationKey.T_APPLICATION_KEY.APP_SECRET);
        public static final UniqueKey<TConfigServerRecord> KEY_T_CONFIG_SERVER_PRIMARY = Internal.createUniqueKey(TConfigServer.T_CONFIG_SERVER, "KEY_t_config_server_PRIMARY", TConfigServer.T_CONFIG_SERVER.ID);
        public static final UniqueKey<TPermissionRecord> KEY_T_PERMISSION_PRIMARY = Internal.createUniqueKey(TPermission.T_PERMISSION, "KEY_t_permission_PRIMARY", TPermission.T_PERMISSION.GROUP_ID);
        public static final UniqueKey<TTenantRecord> KEY_T_TENANT_PRIMARY = Internal.createUniqueKey(TTenant.T_TENANT, "KEY_t_tenant_PRIMARY", TTenant.T_TENANT.ID);
        public static final UniqueKey<TTenantRecord> KEY_T_TENANT_NAME_UNIQUE = Internal.createUniqueKey(TTenant.T_TENANT, "KEY_t_tenant_name_UNIQUE", TTenant.T_TENANT.NAME);
        public static final UniqueKey<TTenantRecord> KEY_T_TENANT_CODE_UNIQUE = Internal.createUniqueKey(TTenant.T_TENANT, "KEY_t_tenant_code_UNIQUE", TTenant.T_TENANT.CODE);
        public static final UniqueKey<TUserRecord> KEY_T_USER_PRIMARY = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_PRIMARY", TUser.T_USER.ID);
        public static final UniqueKey<TUserRecord> KEY_T_USER_LOGIN_NAME_UNIQUE = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_login_name_UNIQUE", TUser.T_USER.LOGIN_NAME);
        public static final UniqueKey<TUserRecord> KEY_T_USER_EMAIL_UNIQUE = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_email_UNIQUE", TUser.T_USER.EMAIL);
        public static final UniqueKey<TUserRecord> KEY_T_USER_MOBILE_UNIQUE = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_mobile_UNIQUE", TUser.T_USER.MOBILE);
        public static final UniqueKey<TUserCaptchaRecord> KEY_T_USER_CAPTCHA_PRIMARY = Internal.createUniqueKey(TUserCaptcha.T_USER_CAPTCHA, "KEY_t_user_captcha_PRIMARY", TUserCaptcha.T_USER_CAPTCHA.ID);
        public static final UniqueKey<TUserCaptchaRecord> KEY_T_USER_CAPTCHA_UNIQ_LOGIN_NAME = Internal.createUniqueKey(TUserCaptcha.T_USER_CAPTCHA, "KEY_t_user_captcha_uniq_login_name", TUserCaptcha.T_USER_CAPTCHA.LOGIN_NAME);
        public static final UniqueKey<TUserGroupRecord> KEY_T_USER_GROUP_PRIMARY = Internal.createUniqueKey(TUserGroup.T_USER_GROUP, "KEY_t_user_group_PRIMARY", TUserGroup.T_USER_GROUP.ID);
        public static final UniqueKey<TUserRefreshTokenRecord> KEY_T_USER_REFRESH_TOKEN_PRIMARY = Internal.createUniqueKey(TUserRefreshToken.T_USER_REFRESH_TOKEN, "KEY_t_user_refresh_token_PRIMARY", TUserRefreshToken.T_USER_REFRESH_TOKEN.TOKEN);
        public static final UniqueKey<TUserRefreshTokenRecord> KEY_T_USER_REFRESH_TOKEN_USER_ID = Internal.createUniqueKey(TUserRefreshToken.T_USER_REFRESH_TOKEN, "KEY_t_user_refresh_token_user_id", TUserRefreshToken.T_USER_REFRESH_TOKEN.USER_ID);
    }
}
